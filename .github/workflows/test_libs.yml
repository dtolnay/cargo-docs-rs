name: Cargo Integration

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  pre_ci:
    uses: dtolnay/.github/.github/workflows/pre_ci.yml@master

  test_cargo_new:
    name: Rust ${{matrix.rust}}
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - name: Enable type layout randomization
        run: echo RUSTFLAGS=${RUSTFLAGS}\ -Zrandomize-layout >> $GITHUB_ENV
        if: matrix.rust == 'nightly'
      - run: cargo new --lib ./test/my_crate_${{matrix.rust}}
      - run: cargo run docs-rs --manifest-path ./test/my_crate_${{matrix.rust}}/Cargo.toml
      - run: rm -rf ./test/my_crate_${{matrix.rust}}

  test_static_libraries:
    name: Lib ${{matrix.lib}}
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        lib: [
          test/workspace/lib_1,
          test/workspace/lib_2,
          test/cargo_config_html,
          test/cargo_config_rustflags
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Install cli
        run: cargo install --path .
      - name: Test from source
        run: cargo run docs-rs --manifest-path ./${{matrix.lib}}/Cargo.toml
      - name: Test from cli
        run: cd ./${{matrix.lib}} && cargo docs-rs

